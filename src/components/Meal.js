import React from 'react';
import Swal from 'sweetalert2';
import 'sweetalert2/dist/sweetalert2.min.css';

// ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ array
const banglaMonths = [
  '‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø', '‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø', '‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö', '‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤', '‡¶Æ‡ßá', '‡¶ú‡ßÅ‡¶®',
  '‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á', '‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü', '‡¶∏‡ßá‡¶™‡ßç‡¶ü‡ßá‡¶Æ‡ßç‡¶¨‡¶∞', '‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞', '‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞', '‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞'
];

// ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞‡¶≠‡¶æ‡¶¨‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ helper
const formatDate = dateStr => {
  if (!dateStr) return '';
  const d = new Date(dateStr);
  const day = d.getDate();
  const month = banglaMonths[d.getMonth()];
  const year = d.getFullYear();
  return `${day} ${month}, ${year}`;
};

export default function Meal({ members, meals, onEdit, onDelete }) {
  // ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Ø‡ßá‡¶∏‡¶¨ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ‡ßá meal ‡¶Ü‡¶õ‡ßá, ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
  const filteredMeals = meals.filter(meal =>
    members.some(m =>
      Number(meal.meals?.[m]?.breakfast || 0) > 0 ||
      Number(meal.meals?.[m]?.lunch || 0) > 0 ||
      Number(meal.meals?.[m]?.dinner || 0) > 0
    )
  );

  // ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶æ‡¶∞‡ßá sort ‡¶ï‡¶∞‡ßÅ‡¶® (oldest first)
  const sortedMeals = [...filteredMeals].sort((a, b) => new Date(a.date) - new Date(b.date));

  // Meal ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡ßá‡¶∂‡¶® Popup
  const handleDelete = idx => {
    Swal.fire({
      title: '‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§?',
      text: `‡¶è‡¶á ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ‡ßá‡¶∞ Meal ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: '‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®!',
      cancelButtonText: '‡¶¨‡¶æ‡¶§‡¶ø‡¶≤'
    }).then((result) => {
      if (result.isConfirmed) {
        onDelete && onDelete(idx);
        Swal.fire({
          icon: 'success',
          title: '‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®!',
          text: 'Meal ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§',
          timer: 1300,
          showConfirmButton: false,
        });
      }
    });
  };

  return (
    <section className="mb-4">
      <h4 className="fw-bold text-success fs-4 mb-4">
        ü•£ ‡¶∂‡ßÅ‡¶ß‡ßÅ Meal ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ (‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶Ö‡¶®‡ßÅ‡¶ï‡ßç‡¶∞‡¶Æ‡ßá)
      </h4>
      <div className="mb-4">
        {sortedMeals.length === 0 ? (
          <div className="text-secondary border rounded-4 text-center p-4">
            ‡¶ï‡ßã‡¶®‡ßã meal data ‡¶®‡ßá‡¶á
          </div>
        ) : (
          <div className="row g-3">
            {sortedMeals.map((meal, idx) => (
              <div className="col-12 col-md-6 col-lg-4" key={meal.date}>
                <div className="border rounded-4 shadow-sm p-3 bg-white h-100">
                  <div className="d-flex justify-content-between align-items-center mb-2">
                    <span className="fw-bold text-primary">{formatDate(meal.date)}</span>
                    <div>
                      <button
                        className="btn btn-sm btn-outline-success me-1"
                        onClick={() => onEdit && onEdit(meals.findIndex(m => m.date === meal.date))}
                        title="Edit Meal"
                      >
                        ‚úé
                      </button>
                      <button
                        className="btn btn-sm btn-outline-danger"
                        onClick={() => handleDelete(meals.findIndex(m => m.date === meal.date))}
                        title="Delete Meal"
                      >
                        üóëÔ∏è
                      </button>
                    </div>
                  </div>
                  <div className="table-responsive">
                    <table className="table table-bordered table-sm align-middle m-0 text-center">
                      <thead>
                        <tr className="table-success">
                          <th>‡¶®‡¶æ‡¶Æ</th>
                          <th>‡¶∏‡¶ï‡¶æ‡¶≤</th>
                          <th>‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞</th>
                          <th>‡¶∞‡¶æ‡¶§</th>
                        </tr>
                      </thead>
                      <tbody>
                        {members.map(m => (
                          <tr key={m}>
                            <td className="fw-bold">{m}</td>
                            <td>{meal.meals?.[m]?.breakfast ?? 0}</td>
                            <td>{meal.meals?.[m]?.lunch ?? 0}</td>
                            <td>{meal.meals?.[m]?.dinner ?? 0}</td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </section>
  );
}
